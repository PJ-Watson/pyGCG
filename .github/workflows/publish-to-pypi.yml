name: Build and publish on release

on: [push, workflow_dispatch]

jobs:

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools twine build wheel

    - name: Build sdist
      run: python -m build --sdist

    - name: Check metadata
      run: twine check dist/*

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*.tar.gz

  build_wheels:
    needs: [build_sdist]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"

    strategy:
      max-parallel: 3
      matrix:
        python-version: ["3.12"]
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install cibuildwheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_MANYLINUX_I686_IMAGE: manylinux2014
        CIBW_BUILD_VERBOSITY: 1
        CIBW_SKIP: '*-musllinux_*'
        CIBW_ARCHS_LINUX: "auto"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    needs: [build_wheels]
    runs-on: ubuntu-latest
    environment:
      # name: pypi
      # url: https://pypi.org/p/pyGCG
      name: testpypi
      url: https://test.pypi.org/p/pyGCG
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: dist*
        path: dist
        merge-multiple: true
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
